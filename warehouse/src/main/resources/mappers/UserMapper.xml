<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.msb.mapper.UserMapper">
    <resultMap type="User" id="userResult">
        <id column="user_id" property="userId" />
        <result column="user_name" property="userName" />
        <result column="user_code" property="userCode" />
        <result column="user_pwd" property="userPwd" />
        <result column="user_type" property="userType" />
        <result column="user_state" property="userState" />
        <result column="is_delete" property="isDelete" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />

    </resultMap>
    <!--
        mybatis 的过呢更新查询方法 都不需要参数
        更新方法  参数返回值都不需要写
    -->
    <!--通过用户code查询findUserByCode-->
    <select id="findUserByCode" resultType="User">
        select *
        from user_info
        where user_code = #{userCode}
          and is_delete = 0
    </select>

    <!--
     //查询用户总行数的方法
     public int selectUserCount(User user)
   -->
    <select id="selectUserCount" resultType="integer">
        select count(*) from user_info
        <where>
            <if test="userCode != null and userCode != ''">
                and user_code like concat('%', #{userCode}, '%')
            </if>
            <if test="userType != null and userType != ''">
                and user_type = #{userType}
            </if>
            <if test="userState != null and userState != ''">
                and user_state = #{userState}
            </if>
            and is_delete = 0
        </where>
    </select>

    <!--
     //分页查询用户的方法
	 public List<User> selectUserPage(@Param("page") Page page, @Param("user")User user)
    -->
    <select id="selectUserPage" resultMap="userResult">
        select t1.* from user_info t1, user_info t2
        <where>
            t1.create_by = t2.user_id
            <if test="user.userCode != null and user.userCode != ''">
                and t1.user_code like concat('%', #{user.userCode}, '%')
            </if>
            <if test="user.userType != null and user.userType != ''">
                and t1.user_type = #{user.userType}
            </if>
            <if test="user.userState != null and user.userState != ''">
                and t1.user_state = #{user.userState}
            </if>
            and t1.is_delete = 0
        </where>
        limit #{page.limitIndex}, #{page.pageSize}
    </select>

    <!--// 添加用户
    public int insertUser(User user);-->
    <insert id="insertUser">
        insert into user_info values (
                                         null,#{userCode},#{userName},#{userPwd},null,0,0,#{createBy},now(),null,null
                                     )
    </insert>

    <!--// 根据用户id修改用户状态的方法
    public int setStateByUserId(Integer userId,String userState);-->
    <update id="setStateByUserId">
        update user_info set user_state = #{param2} where user_id = #{param1}
    </update>

    <!--//根据用户ids删除用户(数据库就是修改delete_id状态)
    public int deleteByUserIds(List<Integer> userIdList);-->
    <update id="deleteByUserIds">
        update user_info set is_delete = 1
        where user_id in
        <foreach collection="list" open="(" close=")" separator="," item="userId">
            #{userId}
        </foreach>
    </update>

    <!--//根据用户id修改用户昵称
    public int updateUserNameByUserId(User user);-->
    <update id="updateUserNameByUserId">
        update user_info
        set
            user_name = #{userName},update_by = #{updateBy},update_time=now()
        where user_id = #{userId}
    </update>

    <!--// 根据用户id重置密码
    public int setPwdByUserId(Integer userId,String password);-->
    <update id="setPwdByUserId">
        update user_info set user_pwd = #{param2} where user_id = #{param1}
    </update>
</mapper>